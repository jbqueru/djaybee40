; Copyright 2024 Jean-Baptiste M. "JBQ" "Djaybee" Queru
;
; This program is free software: you can redistribute it and/or modify
; it under the terms of the GNU Affero General Public License as
; published by the Free Software Foundation, either version 3 of the
; License, or (at your option) any later version.
;
; As an added restriction, if you make the program available for
; third parties to use on hardware you own, such as public gaming
; cabinets (whether or not in a gaming arcade, whether or not
; coin-operated or otherwise for a fee,) the conditions of
; section 13 will apply even if no network is involved.
;
; This program is distributed in the hope that it will be useful,
; but WITHOUT ANY WARRANTY; without even the implied warranty of
; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
; GNU Affero General Public License for more details.
;
; You should have received a copy of the GNU Affero General Public License
; along with this program. If not, see <https://www.gnu.org/licenses/>.
;
; SPDX-License-Identifier: AGPL-3.0-or-later

; Coding style:
;	- ASCII
;	- hard tabs, 8 characters wide, except in ASCII art
;	- 120 columns overall
;	- Standalone block comments in the first 80 columns
;	- Code-related block comments allowed in the last 80 columns
;	- Global symbols for code are CamelCase
;	- Local symbols for code are lowerCamelCase
;	- Symbols for variables are snake_case
;	- Symbols for hardware registers are ALL_CAPS
;	- Related symbols start with the same prefix (so they sort together)
;	- Include but comment out instructions that help readability but
;		don't do anything (e.g. redundant CLC when the carry is
;		guaranteed already to be clear). The comment symbol should be
;		where the instruction would be, i.e. not on the first column.
;		There should be an explanation in a comment.
;	- Note: rulers at 40, 80 and 120 columns help source width


	.org	$4000

; *** First, disable interrupts, so that the firmware is out of the way ***
	DI

; *** Disable ROMs, switch to mode 1 ***
	LD	BC,$7F00 + 10001101b
	OUT	(C),C

; *** Disable 6128 extended RAM ***
	LD	C,11000000b
	OUT	(C),C

; *** Black palette ***
	LD	DE,(00000000b << 8) + 01000000b + $14
	OUT	(C),D
	OUT	(C),E
	INC	D
	OUT	(C),D
	OUT	(C),E
	INC	D
	OUT	(C),D
	OUT	(C),E
	INC	D
	OUT	(C),D
	OUT	(C),E
	LD	D,00010000b
	OUT	(C),D
	OUT	(C),E

; *** Program CRTC 384 x 160 (cinemascope) ***
	LD	BC,($BC << 8) + 0
	OUT	(C),C
	LD	BC,($BD << 8) + 63
	OUT	(C),C
	LD	BC,($BC << 8) + 1
	OUT	(C),C
	LD	BC,($BD << 8) + 2
	OUT	(C),C
	LD	BC,($BC << 8) + 2
	OUT	(C),C
	LD	BC,($BD << 8) + 50
	OUT	(C),C
	LD	BC,($BC << 8) + 3
	OUT	(C),C
	LD	BC,($BD << 8) + $8E
	OUT	(C),C
	LD	BC,($BC << 8) + 4
	OUT	(C),C
	LD	BC,($BD << 8) + 38
	OUT	(C),C
	LD	BC,($BC << 8) + 5
	OUT	(C),C
	LD	BC,($BD << 8) + 0
	OUT	(C),C
	LD	BC,($BC << 8) + 6
	OUT	(C),C
	LD	BC,($BD << 8) + 20
	OUT	(C),C
	LD	BC,($BC << 8) + 7
	OUT	(C),C
	LD	BC,($BD << 8) + 28
	OUT	(C),C
	LD	BC,($BC << 8) + 8
	OUT	(C),C
	LD	BC,($BD << 8) + 00b
	OUT	(C),C
	LD	BC,($BC << 8) + 9
	OUT	(C),C
	LD	BC,($BD << 8) + 7
	OUT	(C),C
	LD	BC,($BC << 8) + 12
	OUT	(C),C
	LD	BC,($BD << 8) + $30
	OUT	(C),C
	LD	BC,($BC << 8) + 13
	OUT	(C),C
	LD	BC,($BD << 8) + $00
	OUT	(C),C


; *** Set 8255 to default mode (register A as write) ***
	LD	BC,($F7 << 8) + 10000010b

; *** Basic AY-3-8912 setup - mixer off ***
	LD	BC,($F4 << 8) + 7
	OUT	(C),C
	LD	BC,$F6C0
	OUT	(C),C
	LD	BC,$F600
	OUT	(C),C
	LD	BC,($F4 << 8) + 0
	OUT	(C),C
	LD	BC,$F680
	OUT	(C),C
	LD	BC,$F600
	OUT	(C),C

; *** Turn floppy motors off ***
	LD	BC,$FA7E
	XOR	A
	OUT	(C),A

; *** Set our own interrupt routine, enable interrupts ***
	LD	A,$C3		; C3 = unconditional jump
	LD	($38),A
	LD	HL,Interrupt
	LD	($39),HL

	IM	1
	EI

Loop:
; *** Wait for VSYNC to turn on ***
WaitVBL:
	LD	B,$F5
	IN	A,(C)
	AND	000000001b
	JR	Z,WaitVBL

	HALT			; line 2
	HALT			; line 54

	LD	BC,$7F10
	OUT	(C),C

	LD	A,E
	AND	$1F
	OR	01000000b
	OUT	(C),A
	INC	E

; *** Add 16 lines worth of fake work, enough for VSYNC to turn off ***
	LD	B,0
Work:	DJNZ	Work

	JMP	Loop


; In VSync lines
;	0 start vsync
;	2 interrupt 1
;	8 start top border (R3H)
;	54 interrupt 2
;	88 start display ((R4+1-R7)*8)
;	106 interrupt 3
;	158 interrupt 4
;	210 interrupt 5
;	248 start bottom border ((R4+1-R7+R6)*8)
;	262 interrupt 6
;	312=0 ((R4+1)*8)


Interrupt:
	EI
	PUSH	BC
	LD	BC,$7F10
	OUT	(C),C
	LD	C,$48
	OUT	(C),C
	LD	C,$4F
	OUT	(C),C
	POP	BC
	RET
